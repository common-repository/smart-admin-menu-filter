{
  "version": 3,
  "sources": ["../../node_modules/double-metaphone/index.js", "../../assets/js/utils/phonetic.js", "../../assets/js/const/samf.js", "../../assets/js/const/wordpress.js", "../../assets/js/main.js"],
  "sourcesContent": ["// Match vowels (including `Y`).\nvar vowels = /[AEIOUY]/\n\n// Match few Slavo-Germanic values.\nvar slavoGermanic = /W|K|CZ|WITZ/\n\n// Match few Germanic values.\nvar germanic = /^(VAN |VON |SCH)/\n\n// Match initial values of which the first character should be skipped.\nvar initialExceptions = /^(GN|KN|PN|WR|PS)/\n\n// Match initial Greek-like values of which the `CH` sounds like `K`.\nvar initialGreekCh = /^CH(IA|EM|OR([^E])|YM|ARAC|ARIS)/\n\n// Match Greek-like values of which the `CH` sounds like `K`.\nvar greekCh = /ORCHES|ARCHIT|ORCHID/\n\n// Match values which when following `CH`, transform `CH` to sound like `K`.\nvar chForKh = /[ BFHLMNRVW]/\n\n// Match values which when preceding a vowel and `UGH`, sound like `F`.\nvar gForF = /[CGLRT]/\n\n// Match initial values which sound like either `K` or `J`.\nvar initialGForKj = /Y[\\s\\S]|E[BILPRSY]|I[BELN]/\n\n// Match initial values which sound like either `K` or `J`.\nvar initialAngerException = /^[DMR]ANGER/\n\n// Match values which when following `GY`, do not sound like `K` or `J`.\nvar gForKj = /[EGIR]/\n\n// Match values which when following `J`, do not sound `J`.\nvar jForJException = /[LTKSNMBZ]/\n\n// Match values which might sound like `L`.\nvar alle = /AS|OS/\n\n// Match Germanic values preceding `SH` which sound like `S`.\nvar hForS = /EIM|OEK|OLM|OLZ/\n\n// Match Dutch values following `SCH` which sound like either `X` and `SK`,\n// or `SK`.\nvar dutchSch = /E[DMNR]|UY|OO/\n\n/**\n * Get the phonetics according to the Double Metaphone algorithm from a value.\n *\n * @param {string} value\n * @returns {[string, string]}\n */\nexport function doubleMetaphone(value) {\n  var primary = ''\n  var secondary = ''\n  var index = 0\n  var length = value.length\n  var last = length - 1\n  /** @type {boolean} */\n  var isSlavoGermanic\n  /** @type {boolean} */\n  var isGermanic\n  /** @type {string} */\n  var subvalue\n  /** @type {string} */\n  var next\n  /** @type {string} */\n  var previous\n  /** @type {string} */\n  var nextnext\n  /** @type {Array.<string>} */\n  var characters\n\n  value = String(value).toUpperCase() + '     '\n  isSlavoGermanic = slavoGermanic.test(value)\n  isGermanic = germanic.test(value)\n  characters = value.split('')\n\n  // Skip this at beginning of word.\n  if (initialExceptions.test(value)) {\n    index++\n  }\n\n  // Initial X is pronounced Z, which maps to S. Such as `Xavier`.\n  if (characters[0] === 'X') {\n    primary += 'S'\n    secondary += 'S'\n    index++\n  }\n\n  while (index < length) {\n    previous = characters[index - 1]\n    next = characters[index + 1]\n    nextnext = characters[index + 2]\n\n    switch (characters[index]) {\n      case 'A':\n      case 'E':\n      case 'I':\n      case 'O':\n      case 'U':\n      case 'Y':\n      case '\u00C0':\n      case '\u00CA':\n      case '\u00C9':\n        if (index === 0) {\n          // All initial vowels now map to `A`.\n          primary += 'A'\n          secondary += 'A'\n        }\n\n        index++\n\n        break\n      case 'B':\n        primary += 'P'\n        secondary += 'P'\n\n        if (next === 'B') {\n          index++\n        }\n\n        index++\n\n        break\n      case '\u00C7':\n        primary += 'S'\n        secondary += 'S'\n        index++\n\n        break\n      case 'C':\n        // Various Germanic:\n        if (\n          previous === 'A' &&\n          next === 'H' &&\n          nextnext !== 'I' &&\n          !vowels.test(characters[index - 2]) &&\n          (nextnext !== 'E' ||\n            ((subvalue = value.slice(index - 2, index + 4)) &&\n              (subvalue === 'BACHER' || subvalue === 'MACHER')))\n        ) {\n          primary += 'K'\n          secondary += 'K'\n          index += 2\n\n          break\n        }\n\n        // Special case for `Caesar`.\n        if (index === 0 && value.slice(index + 1, index + 6) === 'AESAR') {\n          primary += 'S'\n          secondary += 'S'\n          index += 2\n\n          break\n        }\n\n        // Italian `Chianti`.\n        if (value.slice(index + 1, index + 4) === 'HIA') {\n          primary += 'K'\n          secondary += 'K'\n          index += 2\n\n          break\n        }\n\n        if (next === 'H') {\n          // Find `Michael`.\n          if (index > 0 && nextnext === 'A' && characters[index + 3] === 'E') {\n            primary += 'K'\n            secondary += 'X'\n            index += 2\n\n            break\n          }\n\n          // Greek roots such as `chemistry`, `chorus`.\n          if (index === 0 && initialGreekCh.test(value)) {\n            primary += 'K'\n            secondary += 'K'\n            index += 2\n\n            break\n          }\n\n          // Germanic, Greek, or otherwise `CH` for `KH` sound.\n          if (\n            isGermanic ||\n            // Such as 'architect' but not 'arch', orchestra', 'orchid'.\n            greekCh.test(value.slice(index - 2, index + 4)) ||\n            nextnext === 'T' ||\n            nextnext === 'S' ||\n            ((index === 0 ||\n              previous === 'A' ||\n              previous === 'E' ||\n              previous === 'O' ||\n              previous === 'U') &&\n              // Such as `wachtler`, `weschsler`, but not `tichner`.\n              chForKh.test(nextnext))\n          ) {\n            primary += 'K'\n            secondary += 'K'\n          } else if (index === 0) {\n            primary += 'X'\n            secondary += 'X'\n            // Such as 'McHugh'.\n          } else if (value.slice(0, 2) === 'MC') {\n            // Bug? Why matching absolute? what about McHiccup?\n            primary += 'K'\n            secondary += 'K'\n          } else {\n            primary += 'X'\n            secondary += 'K'\n          }\n\n          index += 2\n\n          break\n        }\n\n        // Such as `Czerny`.\n        if (next === 'Z' && value.slice(index - 2, index) !== 'WI') {\n          primary += 'S'\n          secondary += 'X'\n          index += 2\n\n          break\n        }\n\n        // Such as `Focaccia`.\n        if (value.slice(index + 1, index + 4) === 'CIA') {\n          primary += 'X'\n          secondary += 'X'\n          index += 3\n\n          break\n        }\n\n        // Double `C`, but not `McClellan`.\n        if (next === 'C' && !(index === 1 && characters[0] === 'M')) {\n          // Such as `Bellocchio`, but not `Bacchus`.\n          if (\n            (nextnext === 'I' || nextnext === 'E' || nextnext === 'H') &&\n            value.slice(index + 2, index + 4) !== 'HU'\n          ) {\n            subvalue = value.slice(index - 1, index + 4)\n\n            // Such as `Accident`, `Accede`, `Succeed`.\n            if (\n              (index === 1 && previous === 'A') ||\n              subvalue === 'UCCEE' ||\n              subvalue === 'UCCES'\n            ) {\n              primary += 'KS'\n              secondary += 'KS'\n              // Such as `Bacci`, `Bertucci`, other Italian.\n            } else {\n              primary += 'X'\n              secondary += 'X'\n            }\n\n            index += 3\n\n            break\n          } else {\n            // Pierce's rule.\n            primary += 'K'\n            secondary += 'K'\n            index += 2\n\n            break\n          }\n        }\n\n        if (next === 'G' || next === 'K' || next === 'Q') {\n          primary += 'K'\n          secondary += 'K'\n          index += 2\n\n          break\n        }\n\n        // Italian.\n        if (\n          next === 'I' &&\n          // Bug: The original algorithm also calls for A (as in CIA), which is\n          // already taken care of above.\n          (nextnext === 'E' || nextnext === 'O')\n        ) {\n          primary += 'S'\n          secondary += 'X'\n          index += 2\n\n          break\n        }\n\n        if (next === 'I' || next === 'E' || next === 'Y') {\n          primary += 'S'\n          secondary += 'S'\n          index += 2\n\n          break\n        }\n\n        primary += 'K'\n        secondary += 'K'\n\n        // Skip two extra characters ahead in `Mac Caffrey`, `Mac Gregor`.\n        if (\n          next === ' ' &&\n          (nextnext === 'C' || nextnext === 'G' || nextnext === 'Q')\n        ) {\n          index += 3\n          break\n        }\n\n        // Bug: Already covered above.\n        // if (\n        //   next === 'K' ||\n        //   next === 'Q' ||\n        //   (next === 'C' && nextnext !== 'E' && nextnext !== 'I')\n        // ) {\n        //   index++;\n        // }\n\n        index++\n\n        break\n      case 'D':\n        if (next === 'G') {\n          // Such as `edge`.\n          if (nextnext === 'E' || nextnext === 'I' || nextnext === 'Y') {\n            primary += 'J'\n            secondary += 'J'\n            index += 3\n            // Such as `Edgar`.\n          } else {\n            primary += 'TK'\n            secondary += 'TK'\n            index += 2\n          }\n\n          break\n        }\n\n        if (next === 'T' || next === 'D') {\n          primary += 'T'\n          secondary += 'T'\n          index += 2\n\n          break\n        }\n\n        primary += 'T'\n        secondary += 'T'\n        index++\n\n        break\n      case 'F':\n        if (next === 'F') {\n          index++\n        }\n\n        index++\n        primary += 'F'\n        secondary += 'F'\n\n        break\n      case 'G':\n        if (next === 'H') {\n          if (index > 0 && !vowels.test(previous)) {\n            primary += 'K'\n            secondary += 'K'\n            index += 2\n\n            break\n          }\n\n          // Such as `Ghislane`, `Ghiradelli`.\n          if (index === 0) {\n            if (nextnext === 'I') {\n              primary += 'J'\n              secondary += 'J'\n            } else {\n              primary += 'K'\n              secondary += 'K'\n            }\n\n            index += 2\n\n            break\n          }\n\n          // Parker's rule (with some further refinements).\n          if (\n            // Such as `Hugh`.  The comma is not a bug.\n            ((subvalue = characters[index - 2]),\n            subvalue === 'B' || subvalue === 'H' || subvalue === 'D') ||\n            // Such as `bough`.  The comma is not a bug.\n            ((subvalue = characters[index - 3]),\n            subvalue === 'B' || subvalue === 'H' || subvalue === 'D') ||\n            // Such as `Broughton`.  The comma is not a bug.\n            ((subvalue = characters[index - 4]),\n            subvalue === 'B' || subvalue === 'H')\n          ) {\n            index += 2\n\n            break\n          }\n\n          // Such as `laugh`, `McLaughlin`, `cough`, `gough`, `rough`, `tough`.\n          if (\n            index > 2 &&\n            previous === 'U' &&\n            gForF.test(characters[index - 3])\n          ) {\n            primary += 'F'\n            secondary += 'F'\n          } else if (index > 0 && previous !== 'I') {\n            primary += 'K'\n            secondary += 'K'\n          }\n\n          index += 2\n\n          break\n        }\n\n        if (next === 'N') {\n          if (index === 1 && vowels.test(characters[0]) && !isSlavoGermanic) {\n            primary += 'KN'\n            secondary += 'N'\n            // Not like `Cagney`.\n          } else if (\n            value.slice(index + 2, index + 4) !== 'EY' &&\n            value.slice(index + 1) !== 'Y' &&\n            !isSlavoGermanic\n          ) {\n            primary += 'N'\n            secondary += 'KN'\n          } else {\n            primary += 'KN'\n            secondary += 'KN'\n          }\n\n          index += 2\n\n          break\n        }\n\n        // Such as `Tagliaro`.\n        if (value.slice(index + 1, index + 3) === 'LI' && !isSlavoGermanic) {\n          primary += 'KL'\n          secondary += 'L'\n          index += 2\n\n          break\n        }\n\n        // -ges-, -gep-, -gel- at beginning.\n        if (index === 0 && initialGForKj.test(value.slice(1, 3))) {\n          primary += 'K'\n          secondary += 'J'\n          index += 2\n\n          break\n        }\n\n        // -ger-, -gy-.\n        if (\n          (value.slice(index + 1, index + 3) === 'ER' &&\n            previous !== 'I' &&\n            previous !== 'E' &&\n            !initialAngerException.test(value.slice(0, 6))) ||\n          (next === 'Y' && !gForKj.test(previous))\n        ) {\n          primary += 'K'\n          secondary += 'J'\n          index += 2\n\n          break\n        }\n\n        // Italian such as `biaggi`.\n        if (\n          next === 'E' ||\n          next === 'I' ||\n          next === 'Y' ||\n          ((previous === 'A' || previous === 'O') &&\n            next === 'G' &&\n            nextnext === 'I')\n        ) {\n          // Obvious Germanic.\n          if (value.slice(index + 1, index + 3) === 'ET' || isGermanic) {\n            primary += 'K'\n            secondary += 'K'\n          } else {\n            primary += 'J'\n\n            // Always soft if French ending.\n            secondary +=\n              value.slice(index + 1, index + 5) === 'IER ' ? 'J' : 'K'\n          }\n\n          index += 2\n\n          break\n        }\n\n        if (next === 'G') {\n          index++\n        }\n\n        index++\n\n        primary += 'K'\n        secondary += 'K'\n\n        break\n      case 'H':\n        // Only keep if first & before vowel or btw. 2 vowels.\n        if (vowels.test(next) && (index === 0 || vowels.test(previous))) {\n          primary += 'H'\n          secondary += 'H'\n\n          index++\n        }\n\n        index++\n\n        break\n      case 'J':\n        // Obvious Spanish, `jose`, `San Jacinto`.\n        if (\n          value.slice(index, index + 4) === 'JOSE' ||\n          value.slice(0, 4) === 'SAN '\n        ) {\n          if (\n            value.slice(0, 4) === 'SAN ' ||\n            (index === 0 && characters[index + 4] === ' ')\n          ) {\n            primary += 'H'\n            secondary += 'H'\n          } else {\n            primary += 'J'\n            secondary += 'H'\n          }\n\n          index++\n\n          break\n        }\n\n        if (\n          index === 0\n          // Bug: unreachable (see previous statement).\n          // && value.slice(index, index + 4) !== 'JOSE'.\n        ) {\n          primary += 'J'\n\n          // Such as `Yankelovich` or `Jankelowicz`.\n          secondary += 'A'\n          // Spanish pron. of such as `bajador`.\n        } else if (\n          !isSlavoGermanic &&\n          (next === 'A' || next === 'O') &&\n          vowels.test(previous)\n        ) {\n          primary += 'J'\n          secondary += 'H'\n        } else if (index === last) {\n          primary += 'J'\n        } else if (\n          previous !== 'S' &&\n          previous !== 'K' &&\n          previous !== 'L' &&\n          !jForJException.test(next)\n        ) {\n          primary += 'J'\n          secondary += 'J'\n          // It could happen.\n        } else if (next === 'J') {\n          index++\n        }\n\n        index++\n\n        break\n      case 'K':\n        if (next === 'K') {\n          index++\n        }\n\n        primary += 'K'\n        secondary += 'K'\n        index++\n\n        break\n      case 'L':\n        if (next === 'L') {\n          // Spanish such as `cabrillo`, `gallegos`.\n          if (\n            (index === length - 3 &&\n              ((previous === 'A' && nextnext === 'E') ||\n                (previous === 'I' &&\n                  (nextnext === 'O' || nextnext === 'A')))) ||\n            (previous === 'A' &&\n              nextnext === 'E' &&\n              (characters[last] === 'A' ||\n                characters[last] === 'O' ||\n                alle.test(value.slice(last - 1, length))))\n          ) {\n            primary += 'L'\n            index += 2\n\n            break\n          }\n\n          index++\n        }\n\n        primary += 'L'\n        secondary += 'L'\n        index++\n\n        break\n      case 'M':\n        if (\n          next === 'M' ||\n          // Such as `dumb`, `thumb`.\n          (previous === 'U' &&\n            next === 'B' &&\n            (index + 1 === last || value.slice(index + 2, index + 4) === 'ER'))\n        ) {\n          index++\n        }\n\n        index++\n        primary += 'M'\n        secondary += 'M'\n\n        break\n      case 'N':\n        if (next === 'N') {\n          index++\n        }\n\n        index++\n        primary += 'N'\n        secondary += 'N'\n\n        break\n      case '\u00D1':\n        index++\n        primary += 'N'\n        secondary += 'N'\n\n        break\n      case 'P':\n        if (next === 'H') {\n          primary += 'F'\n          secondary += 'F'\n          index += 2\n\n          break\n        }\n\n        // Also account for `campbell` and `raspberry`.\n        subvalue = next\n\n        if (subvalue === 'P' || subvalue === 'B') {\n          index++\n        }\n\n        index++\n\n        primary += 'P'\n        secondary += 'P'\n\n        break\n      case 'Q':\n        if (next === 'Q') {\n          index++\n        }\n\n        index++\n        primary += 'K'\n        secondary += 'K'\n\n        break\n      case 'R':\n        // French such as `Rogier`, but exclude `Hochmeier`.\n        if (\n          index === last &&\n          !isSlavoGermanic &&\n          previous === 'E' &&\n          characters[index - 2] === 'I' &&\n          characters[index - 4] !== 'M' &&\n          characters[index - 3] !== 'E' &&\n          characters[index - 3] !== 'A'\n        ) {\n          secondary += 'R'\n        } else {\n          primary += 'R'\n          secondary += 'R'\n        }\n\n        if (next === 'R') {\n          index++\n        }\n\n        index++\n\n        break\n      case 'S':\n        // Special cases `island`, `isle`, `carlisle`, `carlysle`.\n        if (next === 'L' && (previous === 'I' || previous === 'Y')) {\n          index++\n\n          break\n        }\n\n        // Special case `sugar-`.\n        if (index === 0 && value.slice(1, 5) === 'UGAR') {\n          primary += 'X'\n          secondary += 'S'\n          index++\n\n          break\n        }\n\n        if (next === 'H') {\n          // Germanic.\n          if (hForS.test(value.slice(index + 1, index + 5))) {\n            primary += 'S'\n            secondary += 'S'\n          } else {\n            primary += 'X'\n            secondary += 'X'\n          }\n\n          index += 2\n          break\n        }\n\n        if (\n          next === 'I' &&\n          (nextnext === 'O' || nextnext === 'A')\n          // Bug: Already covered by previous branch\n          // || value.slice(index, index + 4) === 'SIAN'\n        ) {\n          if (isSlavoGermanic) {\n            primary += 'S'\n            secondary += 'S'\n          } else {\n            primary += 'S'\n            secondary += 'X'\n          }\n\n          index += 3\n\n          break\n        }\n\n        // German & Anglicization's, such as `Smith` match `Schmidt`, `snider`\n        // match `Schneider`. Also, -sz- in slavic language although in\n        // hungarian it is pronounced `s`.\n        if (\n          next === 'Z' ||\n          (index === 0 &&\n            (next === 'L' || next === 'M' || next === 'N' || next === 'W'))\n        ) {\n          primary += 'S'\n          secondary += 'X'\n\n          if (next === 'Z') {\n            index++\n          }\n\n          index++\n\n          break\n        }\n\n        if (next === 'C') {\n          // Schlesinger's rule.\n          if (nextnext === 'H') {\n            subvalue = value.slice(index + 3, index + 5)\n\n            // Dutch origin, such as `school`, `schooner`.\n            if (dutchSch.test(subvalue)) {\n              // Such as `schermerhorn`, `schenker`.\n              if (subvalue === 'ER' || subvalue === 'EN') {\n                primary += 'X'\n                secondary += 'SK'\n              } else {\n                primary += 'SK'\n                secondary += 'SK'\n              }\n\n              index += 3\n\n              break\n            }\n\n            if (\n              index === 0 &&\n              !vowels.test(characters[3]) &&\n              characters[3] !== 'W'\n            ) {\n              primary += 'X'\n              secondary += 'S'\n            } else {\n              primary += 'X'\n              secondary += 'X'\n            }\n\n            index += 3\n\n            break\n          }\n\n          if (nextnext === 'I' || nextnext === 'E' || nextnext === 'Y') {\n            primary += 'S'\n            secondary += 'S'\n            index += 3\n            break\n          }\n\n          primary += 'SK'\n          secondary += 'SK'\n          index += 3\n\n          break\n        }\n\n        subvalue = value.slice(index - 2, index)\n\n        // French such as `resnais`, `artois`.\n        if (index === last && (subvalue === 'AI' || subvalue === 'OI')) {\n          secondary += 'S'\n        } else {\n          primary += 'S'\n          secondary += 'S'\n        }\n\n        if (\n          next === 'S'\n          // Bug: already taken care of by `German & Anglicization's` above:\n          // || next === 'Z'\n        ) {\n          index++\n        }\n\n        index++\n\n        break\n      case 'T':\n        if (next === 'I' && nextnext === 'O' && characters[index + 3] === 'N') {\n          primary += 'X'\n          secondary += 'X'\n          index += 3\n\n          break\n        }\n\n        subvalue = value.slice(index + 1, index + 3)\n\n        if (\n          (next === 'I' && nextnext === 'A') ||\n          (next === 'C' && nextnext === 'H')\n        ) {\n          primary += 'X'\n          secondary += 'X'\n          index += 3\n\n          break\n        }\n\n        if (next === 'H' || (next === 'T' && nextnext === 'H')) {\n          // Special case `Thomas`, `Thames` or Germanic.\n          if (\n            isGermanic ||\n            ((nextnext === 'O' || nextnext === 'A') &&\n              characters[index + 3] === 'M')\n          ) {\n            primary += 'T'\n            secondary += 'T'\n          } else {\n            primary += '0'\n            secondary += 'T'\n          }\n\n          index += 2\n\n          break\n        }\n\n        if (next === 'T' || next === 'D') {\n          index++\n        }\n\n        index++\n        primary += 'T'\n        secondary += 'T'\n\n        break\n      case 'V':\n        if (next === 'V') {\n          index++\n        }\n\n        primary += 'F'\n        secondary += 'F'\n        index++\n\n        break\n      case 'W':\n        // Can also be in middle of word (as already taken care of for initial).\n        if (next === 'R') {\n          primary += 'R'\n          secondary += 'R'\n          index += 2\n\n          break\n        }\n\n        if (index === 0) {\n          // `Wasserman` should match `Vasserman`.\n          if (vowels.test(next)) {\n            primary += 'A'\n            secondary += 'F'\n          } else if (next === 'H') {\n            // Need `Uomo` to match `Womo`.\n            primary += 'A'\n            secondary += 'A'\n          }\n        }\n\n        // `Arnow` should match `Arnoff`.\n        if (\n          ((previous === 'E' || previous === 'O') &&\n            next === 'S' &&\n            nextnext === 'K' &&\n            (characters[index + 3] === 'I' || characters[index + 3] === 'Y')) ||\n          // Maybe a bug? Shouldn't this be general Germanic?\n          value.slice(0, 3) === 'SCH' ||\n          (index === last && vowels.test(previous))\n        ) {\n          secondary += 'F'\n          index++\n\n          break\n        }\n\n        // Polish such as `Filipowicz`.\n        if (\n          next === 'I' &&\n          (nextnext === 'C' || nextnext === 'T') &&\n          characters[index + 3] === 'Z'\n        ) {\n          primary += 'TS'\n          secondary += 'FX'\n          index += 4\n\n          break\n        }\n\n        index++\n\n        break\n      case 'X':\n        // French such as `breaux`.\n        if (\n          !(\n            index === last &&\n            // Bug: IAU and EAU also match by AU\n            // (/IAU|EAU/.test(value.slice(index - 3, index))) ||\n            previous === 'U' &&\n            (characters[index - 2] === 'A' || characters[index - 2] === 'O')\n          )\n        ) {\n          primary += 'KS'\n          secondary += 'KS'\n        }\n\n        if (next === 'C' || next === 'X') {\n          index++\n        }\n\n        index++\n\n        break\n      case 'Z':\n        // Chinese pinyin such as `Zhao`.\n        if (next === 'H') {\n          primary += 'J'\n          secondary += 'J'\n          index += 2\n\n          break\n        } else if (\n          (next === 'Z' &&\n            (nextnext === 'A' || nextnext === 'I' || nextnext === 'O')) ||\n          (isSlavoGermanic && index > 0 && previous !== 'T')\n        ) {\n          primary += 'S'\n          secondary += 'TS'\n        } else {\n          primary += 'S'\n          secondary += 'S'\n        }\n\n        if (next === 'Z') {\n          index++\n        }\n\n        index++\n\n        break\n      default:\n        index++\n    }\n  }\n\n  return [primary, secondary]\n}\n", "import {doubleMetaphone} from 'double-metaphone';\n\n/**\n * Phonetic helpers.\n */\nexport default class SAMF_Phonetic {\n\n\t/**\n\t * Convert a string to double metaphone.\n\t *\n\t * @param    {string}  string  String to convert to double metaphone.\n\t *\n\t * @returns  {array}           Double metaphone array of string.\n\t */\n\tstrToDoubleMetaphone( string ) {\n\t\treturn doubleMetaphone( string );\n\t}\n\n\t/**\n\t * Compare two strings for a double metaphone match.\n\t *\n\t * @param    {string}  str1     First compare string.\n\t * @param    {array}   dmArray  Second compare string.\n\t *\n\t * @returns  {boolean}          Returns true if a match was found.\n\t */\n\tisMatch( str1, dmArray ) {\n\t\tconst dmStrArray = this.strToDoubleMetaphone( str1 );\n\t\treturn dmStrArray.find( dmStr1 => {\n\t\t\treturn dmArray.find( dmStr2 => {\n\t\t\t\treturn dmStr2.search( dmStr1 ) > -1;\n\t\t\t});\n\t\t});\n\t}\n}", "/**\n * Admin Menu Filter CSS classes and IDs.\n *\n * @type {string}\n */\n\n// CSS classes.\nexport const showItemClass             = 'samf-admin-show-item';\nexport const hideItemClass             = 'samf-admin-hide-item';\nexport const adminMenuSearchFieldClass = 'samf-admin-menu-search-field';\n\n// Ids.\nexport const adminMenuSearch = 'smart-admin-menu-filter-search';\n\n// Attributes.\nexport const adminMenuFilterName = 'samf-admin-menu-filter';", "/**\n * WordPress CSS classes and IDs.\n *\n * @type {string}\n */\n\n// CSS classes.\nexport const currentSubMenuClass = 'wp-has-current-submenu';\nexport const hasSubMenuClass     = 'wp-has-submenu';\nexport const menuNameClass       = 'wp-menu-name';\nexport const menuTopClass        = 'menu-top';\n\n// IDs.\nexport const adminMenuWrapId = 'adminmenuwrap';\nexport const adminMenuId     = 'adminmenu';", "import SAMF_Phonetic from './utils/phonetic';\nimport {\n\tshowItemClass,\n\thideItemClass,\n\tadminMenuSearchFieldClass,\n\tadminMenuFilterName,\n\tadminMenuSearch\n} from './const/samf';\nimport {\n\tcurrentSubMenuClass,\n\thasSubMenuClass,\n\tmenuNameClass,\n\tmenuTopClass,\n\tadminMenuWrapId,\n\tadminMenuId,\n} from './const/wordpress';\n\n/**\n * Smart Admin Menu Filter.\n */\nclass Smart_Admin_Menu_Filter {\n\n\t/**\n\t * Admin Menu Filter Constructor.\n\t */\n\tconstructor() {\n\t\tthis.adminMenuWrap = document.getElementById( adminMenuWrapId );\n\t\tthis.adminMenu     = document.getElementById( adminMenuId );\n\t}\n\n\t/**\n\t * Initialize Smart Admin Menu Filter.\n\t */\n\tinit() {\n\t\tthis.SAMFPhonetic    = new SAMF_Phonetic();\n\t\tthis.adminMenuItems = this.getAdminMenu() || [];\n\t\tthis.createAdminSearchField();\n\t}\n\n\tgetAdminMenu() {\n\t\tlet menuItems = {};\n\t\t// Build the admin menu object.\n\t\tthis.adminMenu.querySelectorAll( 'li.' + menuTopClass ).forEach(( menuTopItem ) => {\n\t\t\tlet menuNameDiv = menuTopItem.querySelector( '.' + menuNameClass );\n\t\t\tlet menuName    = menuNameDiv.textContent || menuNameDiv.innerText;\n\n\t\t\tmenuItems[ menuTopItem.id ] = {\n\t\t\t\telement: menuTopItem,\n\t\t\t\tlabel: this.SAMFPhonetic.strToDoubleMetaphone( menuName ),\n\t\t\t\tsubMenuWrap: null,\n\t\t\t\tclasses: menuTopItem.classList || [],\n\t\t\t\tsubMenu: [],\n\t\t\t};\n\n\t\t\t// If the admin menu item has a sub-menu, iterate over each sub-item.\n\t\t\tif ( menuTopItem.classList.contains( hasSubMenuClass ) ) {\n\t\t\t\tlet subMenuWrap = menuTopItem.querySelector('ul');\n\n\t\t\t\tmenuItems[ menuTopItem.id ].subMenuWrap = {\n\t\t\t\t\telement: subMenuWrap,\n\t\t\t\t\tclasses: subMenuWrap.classList || [],\n\t\t\t\t};\n\n\t\t\t\tsubMenuWrap.querySelectorAll( 'li' ).forEach( ( subMenuListItem ) => {\n\t\t\t\t\tlet subMenuLink = subMenuListItem.querySelector( 'a' );\n\t\t\t\t\tif ( subMenuLink ) {\n\n\t\t\t\t\t\t// Get the text of the sub menu link to compare against the search term.\n\t\t\t\t\t\tlet subMenuListItemName = subMenuLink.textContent || subMenuLink.text;\n\n\t\t\t\t\t\tmenuItems[ menuTopItem.id ].subMenu.push({\n\t\t\t\t\t\t\telement: subMenuListItem,\n\t\t\t\t\t\t\tlabel: this.SAMFPhonetic.strToDoubleMetaphone( subMenuListItemName ),\n\t\t\t\t\t\t\tclasses: subMenuListItem.classList || [],\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn menuItems;\n\t}\n\n\t/**\n\t * Create Smart Admin Menu Filter Search Field.\n\t */\n\tcreateAdminSearchField() {\n\t\tthis.menuSearchField = document.createElement( 'input' );\n\n\t\tconst adminSearchField = new Promise( ( resolve, reject ) => {\n\t\t\ttry {\n\t\t\t\t// Add the classes and attributes to search input and wrapping elements.\n\t\t\t\tthis.menuSearchField.classList.add( adminMenuSearchFieldClass );\n\t\t\t\tthis.menuSearchField.setAttribute( 'name', adminMenuFilterName );\n\t\t\t\tthis.menuSearchField.setAttribute( 'type', 'text' );\n\t\t\t\tthis.menuSearchField.setAttribute( 'value', '' );\n\t\t\t\tthis.menuSearchField.setAttribute( 'placeholder', 'Search Admin Menu' );\n\n\t\t\t\tconst menuSearch = document.createElement( 'div' );\n\t\t\t\tmenuSearch.setAttribute( 'id', adminMenuSearch );\n\t\t\t\tmenuSearch.append( this.menuSearchField );\n\n\t\t\t\tthis.adminMenuWrap.prepend( menuSearch );\n\n\t\t\t\tresolve( true );\n\t\t\t} catch ( e ) {\n\t\t\t\treject( false );\n\t\t\t}\n\t\t});\n\n\t\t// Once the search field has been created and added,\n\t\t// add the event listeners.\n\t\tadminSearchField.then( () => {\n\t\t\tthis.addListeners();\n\t\t});\n\t}\n\n\t/**\n\t * Add event listeners for search field.\n\t */\n\taddListeners() {\n\t\tthis.menuSearchField.addEventListener( 'keyup', ( e ) => {\n\t\t\tthis.searchMenu( e.target.value );\n\t\t});\n\t}\n\n\t/**\n\t * Perform the admin menu search.\n\t *\n\t * @param  {string}  searchTerm  Search term.\n\t */\n\tsearchMenu( searchTerm ) {\n\t\tlet matchFound = false;\n\t\tsearchTerm     = searchTerm.trim();\n\n\t\tconst menuSeparator = document.querySelectorAll('.wp-menu-separator');\n\t\tif ( searchTerm ) {\n\t\t\tmenuSeparator.forEach((separator) => {\n\t\t\t\tseparator.classList.add('samf-admin-hide-item');\n\t\t\t});\n\t\t} else {\n\t\t\tmenuSeparator.forEach((separator) => {\n\t\t\t\tseparator.classList.remove('samf-admin-hide-item');\n\t\t\t});\n\t\t}\n\n\t\tObject.values( this.adminMenuItems ).forEach( ( menuTopItem ) => {\n\t\t\tlet subItemMatch   = false;\n\t\t\tconst subMenuWrap  = menuTopItem.subMenuWrap;\n\t\t\tconst menuTopLabel = menuTopItem.label;\n\n\t\t\t// Reset the top level menu item to initial state\n\t\t\t// if there is no search text.\n\t\t\tif ( ! searchTerm ) {\n\t\t\t\tthis.resetItem( menuTopItem );\n\n\t\t\t\tif ( subMenuWrap ) {\n\t\t\t\t\tthis.resetItem( subMenuWrap );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set true if there is a phonetic phrase match.\n\t\t\tmatchFound = this.SAMFPhonetic.isMatch( searchTerm, menuTopLabel );\n\n\t\t\tmenuTopItem.subMenu.forEach( ( subMenuListItem ) => {\n\t\t\t\tlet subMenuLabel = subMenuListItem.label;\n\n\t\t\t\t// Reset sub menu to initial state.\n\t\t\t\t//this.resetItem( subMenuListItem );\n\n\t\t\t\t// Check the sub menu link for a phonetic match to the search term.\n\t\t\t\tif ( this.SAMFPhonetic.isMatch( searchTerm, subMenuLabel ) ) {\n\t\t\t\t\tsubItemMatch = true;\n\t\t\t\t\tthis.showItem( subMenuListItem );\n\t\t\t\t} else {\n\t\t\t\t\t// Display the item if we have a top level match\n\t\t\t\t\t// but not a sub item match. Sub menu items are\n\t\t\t\t\t// hidden by default unless they are in the\n\t\t\t\t\t// current selected menu.\n\t\t\t\t\tif ( matchFound ) {\n\t\t\t\t\t\tthis.showItem( subMenuListItem );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.hideItem( subMenuListItem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Reset the sub menu to initial state if there\n\t\t\t\t// isn't a search term.\n\t\t\t\tif ( ! searchTerm.length ) {\n \t\t\t\t\tthis.resetItem( subMenuListItem );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif ( searchTerm.length ) {\n\t\t\t\t// Hide the entire menu item if we don't have a\n\t\t\t\t// top level or sub item match.\n\t\t\t\tif (\n\t\t\t\t\t! matchFound &&\n\t\t\t\t\t! subItemMatch\n\t\t\t\t) {\n\t\t\t\t\tthis.hideItem( menuTopItem );\n\t\t\t\t} else {\n\t\t\t\t\tthis.showItem( menuTopItem );\n\t\t\t\t}\n\n\t\t\t\tif ( subMenuWrap ) {\n\t\t\t\t\t// If we have a sub menu item match, toggle on\n\t\t\t\t\t// the display of the entire sub menu. Otherwise,\n\t\t\t\t\t// hide the sub menu if it isn't in the current\n\t\t\t\t\t// select menu.\n\t\t\t\t\tif (subItemMatch) {\n\t\t\t\t\t\tif (!subMenuWrap.classes.contains(currentSubMenuClass)) {\n\t\t\t\t\t\t\tthis.showItem( subMenuWrap );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.hideItem( subMenuWrap );\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif ( ! subMenuWrap.classes.contains( currentSubMenuClass ) ) {\n\t\t\t\t\t\t\tthis.hideItem( subMenuWrap );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.showItem( subMenuWrap );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Show a menu item.\n\t *\n\t * @param  {Element}  menuItem  Menu Item.\n\t */\n\tshowItem( menuItem ) {\n\t\tif ( ! menuItem.classes.contains( showItemClass ) ) {\n\t\t\tlet menuItemClassList = menuItem.element.classList;\n\t\t\tmenuItemClassList.add( showItemClass );\n\t\t\tmenuItem.classes = menuItemClassList;\n\t\t}\n\t\tif ( menuItem.classes.contains( hideItemClass ) ) {\n\t\t\tlet menuItemClassList = menuItem.element.classList;\n\t\t\tmenuItemClassList.remove( hideItemClass );\n\t\t\tmenuItem.classes = menuItemClassList;\n\t\t}\n\t}\n\n\t/**\n\t * Hide a menu item.\n\t *\n\t * @param  {Element}  menuItem  Menu Item.\n\t */\n\thideItem( menuItem ) {\n\t\tif ( menuItem.classes.contains( showItemClass ) ) {\n\t\t\tlet menuItemClassList = menuItem.element.classList;\n\t\t\tmenuItemClassList.remove( showItemClass );\n\t\t\tmenuItem.classes = menuItemClassList;\n\t\t}\n\t\tif ( ! menuItem.classes.contains( hideItemClass ) ) {\n\t\t\tlet menuItemClassList = menuItem.element.classList;\n\t\t\tmenuItemClassList.add( hideItemClass );\n\t\t\tmenuItem.classes = menuItemClassList;\n\t\t}\n\t}\n\n\t/**\n\t * Reset the menu item.\n\t *\n\t * @param  {Element}  menuItem  Menu Item.\n\t */\n\tresetItem( menuItem ) {\n\t\tif ( menuItem.classes.contains( showItemClass ) ) {\n\t\t\tlet menuItemClassList = menuItem.element.classList;\n\t\t\tmenuItemClassList.remove( showItemClass );\n\t\t\tmenuItem.classes = menuItemClassList;\n\t\t}\n\t\tif ( menuItem.classes.contains( hideItemClass ) ) {\n\t\t\tlet menuItemClassList = menuItem.element.classList;\n\t\t\tmenuItemClassList.remove( hideItemClass );\n\t\t\tmenuItem.classes = menuItemClassList;\n\t\t}\n\t}\n}\n\n/**\n * Initialize the Smart Admin Menu Filter on Document load.\n */\ndocument.addEventListener('DOMContentLoaded', () => {\n\tconst smartAdminMenuFilter = new Smart_Admin_Menu_Filter();\n\tsmartAdminMenuFilter.init();\n});"],
  "mappings": "MACA,GAAI,GAAS,WAGT,EAAgB,cAGhB,EAAW,mBAGX,EAAoB,oBAGpB,EAAiB,mCAGjB,EAAU,uBAGV,EAAU,eAGV,EAAQ,UAGR,EAAgB,6BAGhB,EAAwB,cAGxB,EAAS,SAGT,EAAiB,aAGjB,EAAO,QAGP,EAAQ,kBAIR,EAAW,gBAQR,WAAyB,EAAO,CACrC,GAAI,GAAU,GACV,EAAY,GACZ,EAAQ,EACR,EAAS,EAAM,OACf,EAAO,EAAS,EAEhB,EAEA,EAEA,EAEA,EAEA,EAEA,EAEA,EAmBJ,IAjBA,EAAQ,OAAO,GAAO,cAAgB,QACtC,EAAkB,EAAc,KAAK,GACrC,EAAa,EAAS,KAAK,GAC3B,EAAa,EAAM,MAAM,IAGrB,EAAkB,KAAK,IACzB,IAIE,EAAW,KAAO,KACpB,IAAW,IACX,GAAa,IACb,KAGK,EAAQ,GAKb,OAJA,EAAW,EAAW,EAAQ,GAC9B,EAAO,EAAW,EAAQ,GAC1B,EAAW,EAAW,EAAQ,GAEtB,EAAW,QACZ,QACA,QACA,QACA,QACA,QACA,QACA,WACA,WACA,OACH,AAAI,IAAU,GAEZ,IAAW,IACX,GAAa,KAGf,IAEA,UACG,IACH,GAAW,IACX,GAAa,IAET,IAAS,KACX,IAGF,IAEA,UACG,OACH,GAAW,IACX,GAAa,IACb,IAEA,UACG,IAEH,GACE,IAAa,KACb,IAAS,KACT,IAAa,KACb,CAAC,EAAO,KAAK,EAAW,EAAQ,KAC/B,KAAa,KACV,GAAW,EAAM,MAAM,EAAQ,EAAG,EAAQ,KACzC,KAAa,UAAY,IAAa,WAC3C,CACA,GAAW,IACX,GAAa,IACb,GAAS,EAET,MAIF,GAAI,IAAU,GAAK,EAAM,MAAM,EAAQ,EAAG,EAAQ,KAAO,QAAS,CAChE,GAAW,IACX,GAAa,IACb,GAAS,EAET,MAIF,GAAI,EAAM,MAAM,EAAQ,EAAG,EAAQ,KAAO,MAAO,CAC/C,GAAW,IACX,GAAa,IACb,GAAS,EAET,MAGF,GAAI,IAAS,IAAK,CAEhB,GAAI,EAAQ,GAAK,IAAa,KAAO,EAAW,EAAQ,KAAO,IAAK,CAClE,GAAW,IACX,GAAa,IACb,GAAS,EAET,MAIF,GAAI,IAAU,GAAK,EAAe,KAAK,GAAQ,CAC7C,GAAW,IACX,GAAa,IACb,GAAS,EAET,MAIF,AACE,GAEA,EAAQ,KAAK,EAAM,MAAM,EAAQ,EAAG,EAAQ,KAC5C,IAAa,KACb,IAAa,KACX,KAAU,GACV,IAAa,KACb,IAAa,KACb,IAAa,KACb,IAAa,MAEb,EAAQ,KAAK,GAEf,IAAW,IACX,GAAa,KACR,AAAI,IAAU,EACnB,IAAW,IACX,GAAa,KAER,AAAI,EAAM,MAAM,EAAG,KAAO,KAE/B,IAAW,IACX,GAAa,KAEb,IAAW,IACX,GAAa,KAGf,GAAS,EAET,MAIF,GAAI,IAAS,KAAO,EAAM,MAAM,EAAQ,EAAG,KAAW,KAAM,CAC1D,GAAW,IACX,GAAa,IACb,GAAS,EAET,MAIF,GAAI,EAAM,MAAM,EAAQ,EAAG,EAAQ,KAAO,MAAO,CAC/C,GAAW,IACX,GAAa,IACb,GAAS,EAET,MAIF,GAAI,IAAS,KAAO,CAAE,KAAU,GAAK,EAAW,KAAO,KAErD,GACG,KAAa,KAAO,IAAa,KAAO,IAAa,MACtD,EAAM,MAAM,EAAQ,EAAG,EAAQ,KAAO,KACtC,CACA,EAAW,EAAM,MAAM,EAAQ,EAAG,EAAQ,GAG1C,AACG,IAAU,GAAK,IAAa,KAC7B,IAAa,SACb,IAAa,QAEb,IAAW,KACX,GAAa,MAGb,IAAW,IACX,GAAa,KAGf,GAAS,EAET,UACK,CAEL,GAAW,IACX,GAAa,IACb,GAAS,EAET,MAIJ,GAAI,IAAS,KAAO,IAAS,KAAO,IAAS,IAAK,CAChD,GAAW,IACX,GAAa,IACb,GAAS,EAET,MAIF,GACE,IAAS,KAGR,KAAa,KAAO,IAAa,KAClC,CACA,GAAW,IACX,GAAa,IACb,GAAS,EAET,MAGF,GAAI,IAAS,KAAO,IAAS,KAAO,IAAS,IAAK,CAChD,GAAW,IACX,GAAa,IACb,GAAS,EAET,MAOF,GAJA,GAAW,IACX,GAAa,IAIX,IAAS,KACR,KAAa,KAAO,IAAa,KAAO,IAAa,KACtD,CACA,GAAS,EACT,MAYF,IAEA,UACG,IACH,GAAI,IAAS,IAAK,CAEhB,AAAI,IAAa,KAAO,IAAa,KAAO,IAAa,IACvD,IAAW,IACX,GAAa,IACb,GAAS,GAGT,IAAW,KACX,GAAa,KACb,GAAS,GAGX,MAGF,GAAI,IAAS,KAAO,IAAS,IAAK,CAChC,GAAW,IACX,GAAa,IACb,GAAS,EAET,MAGF,GAAW,IACX,GAAa,IACb,IAEA,UACG,IACH,AAAI,IAAS,KACX,IAGF,IACA,GAAW,IACX,GAAa,IAEb,UACG,IACH,GAAI,IAAS,IAAK,CAChB,GAAI,EAAQ,GAAK,CAAC,EAAO,KAAK,GAAW,CACvC,GAAW,IACX,GAAa,IACb,GAAS,EAET,MAIF,GAAI,IAAU,EAAG,CACf,AAAI,IAAa,IACf,IAAW,IACX,GAAa,KAEb,IAAW,IACX,GAAa,KAGf,GAAS,EAET,MAIF,GAEI,EAAW,EAAW,EAAQ,GAChC,IAAa,KAAO,IAAa,KAAO,IAAa,KAEnD,GAAW,EAAW,EAAQ,GAChC,IAAa,KAAO,IAAa,KAAO,IAAa,MAEnD,GAAW,EAAW,EAAQ,GAChC,IAAa,KAAO,IAAa,KACjC,CACA,GAAS,EAET,MAIF,AACE,EAAQ,GACR,IAAa,KACb,EAAM,KAAK,EAAW,EAAQ,IAE9B,IAAW,IACX,GAAa,KACJ,EAAQ,GAAK,IAAa,KACnC,IAAW,IACX,GAAa,KAGf,GAAS,EAET,MAGF,GAAI,IAAS,IAAK,CAChB,AAAI,IAAU,GAAK,EAAO,KAAK,EAAW,KAAO,CAAC,EAChD,IAAW,KACX,GAAa,KAER,AACL,EAAM,MAAM,EAAQ,EAAG,EAAQ,KAAO,MACtC,EAAM,MAAM,EAAQ,KAAO,KAC3B,CAAC,EAED,IAAW,IACX,GAAa,MAEb,IAAW,KACX,GAAa,MAGf,GAAS,EAET,MAIF,GAAI,EAAM,MAAM,EAAQ,EAAG,EAAQ,KAAO,MAAQ,CAAC,EAAiB,CAClE,GAAW,KACX,GAAa,IACb,GAAS,EAET,MAIF,GAAI,IAAU,GAAK,EAAc,KAAK,EAAM,MAAM,EAAG,IAAK,CACxD,GAAW,IACX,GAAa,IACb,GAAS,EAET,MAIF,GACG,EAAM,MAAM,EAAQ,EAAG,EAAQ,KAAO,MACrC,IAAa,KACb,IAAa,KACb,CAAC,EAAsB,KAAK,EAAM,MAAM,EAAG,KAC5C,IAAS,KAAO,CAAC,EAAO,KAAK,GAC9B,CACA,GAAW,IACX,GAAa,IACb,GAAS,EAET,MAIF,GACE,IAAS,KACT,IAAS,KACT,IAAS,KACP,KAAa,KAAO,IAAa,MACjC,IAAS,KACT,IAAa,IACf,CAEA,AAAI,EAAM,MAAM,EAAQ,EAAG,EAAQ,KAAO,MAAQ,EAChD,IAAW,IACX,GAAa,KAEb,IAAW,IAGX,GACE,EAAM,MAAM,EAAQ,EAAG,EAAQ,KAAO,OAAS,IAAM,KAGzD,GAAS,EAET,MAGF,AAAI,IAAS,KACX,IAGF,IAEA,GAAW,IACX,GAAa,IAEb,UACG,IAEH,AAAI,EAAO,KAAK,IAAU,KAAU,GAAK,EAAO,KAAK,KACnD,IAAW,IACX,GAAa,IAEb,KAGF,IAEA,UACG,IAEH,GACE,EAAM,MAAM,EAAO,EAAQ,KAAO,QAClC,EAAM,MAAM,EAAG,KAAO,OACtB,CACA,AACE,EAAM,MAAM,EAAG,KAAO,QACrB,IAAU,GAAK,EAAW,EAAQ,KAAO,IAE1C,IAAW,IACX,GAAa,KAEb,IAAW,IACX,GAAa,KAGf,IAEA,MAGF,AACE,IAAU,EAIV,IAAW,IAGX,GAAa,KAER,AACL,CAAC,GACA,KAAS,KAAO,IAAS,MAC1B,EAAO,KAAK,GAEZ,IAAW,IACX,GAAa,KACR,AAAI,IAAU,EACnB,GAAW,IACN,AACL,IAAa,KACb,IAAa,KACb,IAAa,KACb,CAAC,EAAe,KAAK,GAErB,IAAW,IACX,GAAa,KAEJ,IAAS,KAClB,IAGF,IAEA,UACG,IACH,AAAI,IAAS,KACX,IAGF,GAAW,IACX,GAAa,IACb,IAEA,UACG,IACH,GAAI,IAAS,IAAK,CAEhB,GACG,IAAU,EAAS,GAChB,KAAa,KAAO,IAAa,KAChC,IAAa,KACX,KAAa,KAAO,IAAa,OACvC,IAAa,KACZ,IAAa,KACZ,GAAW,KAAU,KACpB,EAAW,KAAU,KACrB,EAAK,KAAK,EAAM,MAAM,EAAO,EAAG,KACpC,CACA,GAAW,IACX,GAAS,EAET,MAGF,IAGF,GAAW,IACX,GAAa,IACb,IAEA,UACG,IACH,AACE,KAAS,KAER,IAAa,KACZ,IAAS,KACR,GAAQ,IAAM,GAAQ,EAAM,MAAM,EAAQ,EAAG,EAAQ,KAAO,QAE/D,IAGF,IACA,GAAW,IACX,GAAa,IAEb,UACG,IACH,AAAI,IAAS,KACX,IAGF,IACA,GAAW,IACX,GAAa,IAEb,UACG,OACH,IACA,GAAW,IACX,GAAa,IAEb,UACG,IACH,GAAI,IAAS,IAAK,CAChB,GAAW,IACX,GAAa,IACb,GAAS,EAET,MAIF,EAAW,EAEP,KAAa,KAAO,IAAa,MACnC,IAGF,IAEA,GAAW,IACX,GAAa,IAEb,UACG,IACH,AAAI,IAAS,KACX,IAGF,IACA,GAAW,IACX,GAAa,IAEb,UACG,IAEH,AACE,IAAU,GACV,CAAC,GACD,IAAa,KACb,EAAW,EAAQ,KAAO,KAC1B,EAAW,EAAQ,KAAO,KAC1B,EAAW,EAAQ,KAAO,KAC1B,EAAW,EAAQ,KAAO,KAI1B,IAAW,KACX,GAAa,IAGX,IAAS,KACX,IAGF,IAEA,UACG,IAEH,GAAI,IAAS,KAAQ,KAAa,KAAO,IAAa,KAAM,CAC1D,IAEA,MAIF,GAAI,IAAU,GAAK,EAAM,MAAM,EAAG,KAAO,OAAQ,CAC/C,GAAW,IACX,GAAa,IACb,IAEA,MAGF,GAAI,IAAS,IAAK,CAEhB,AAAI,EAAM,KAAK,EAAM,MAAM,EAAQ,EAAG,EAAQ,IAC5C,IAAW,IACX,GAAa,KAEb,IAAW,IACX,GAAa,KAGf,GAAS,EACT,MAGF,GACE,IAAS,KACR,KAAa,KAAO,IAAa,KAGlC,CACA,AAAI,EACF,IAAW,IACX,GAAa,KAEb,IAAW,IACX,GAAa,KAGf,GAAS,EAET,MAMF,GACE,IAAS,KACR,IAAU,GACR,KAAS,KAAO,IAAS,KAAO,IAAS,KAAO,IAAS,KAC5D,CACA,GAAW,IACX,GAAa,IAET,IAAS,KACX,IAGF,IAEA,MAGF,GAAI,IAAS,IAAK,CAEhB,GAAI,IAAa,IAAK,CAIpB,GAHA,EAAW,EAAM,MAAM,EAAQ,EAAG,EAAQ,GAGtC,EAAS,KAAK,GAAW,CAE3B,AAAI,IAAa,MAAQ,IAAa,KACpC,IAAW,IACX,GAAa,MAEb,IAAW,KACX,GAAa,MAGf,GAAS,EAET,MAGF,AACE,IAAU,GACV,CAAC,EAAO,KAAK,EAAW,KACxB,EAAW,KAAO,IAElB,IAAW,IACX,GAAa,KAEb,IAAW,IACX,GAAa,KAGf,GAAS,EAET,MAGF,GAAI,IAAa,KAAO,IAAa,KAAO,IAAa,IAAK,CAC5D,GAAW,IACX,GAAa,IACb,GAAS,EACT,MAGF,GAAW,KACX,GAAa,KACb,GAAS,EAET,MAGF,EAAW,EAAM,MAAM,EAAQ,EAAG,GAG9B,IAAU,GAAS,KAAa,MAAQ,IAAa,OAGvD,IAAW,KACX,GAAa,IAIb,IAAS,KAIT,IAGF,IAEA,UACG,IACH,GAAI,IAAS,KAAO,IAAa,KAAO,EAAW,EAAQ,KAAO,IAAK,CACrE,GAAW,IACX,GAAa,IACb,GAAS,EAET,MAKF,GAFA,EAAW,EAAM,MAAM,EAAQ,EAAG,EAAQ,GAGvC,IAAS,KAAO,IAAa,KAC7B,IAAS,KAAO,IAAa,IAC9B,CACA,GAAW,IACX,GAAa,IACb,GAAS,EAET,MAGF,GAAI,IAAS,KAAQ,IAAS,KAAO,IAAa,IAAM,CAEtD,AACE,GACE,KAAa,KAAO,IAAa,MACjC,EAAW,EAAQ,KAAO,IAE5B,IAAW,IACX,GAAa,KAEb,IAAW,IACX,GAAa,KAGf,GAAS,EAET,MAGF,AAAI,KAAS,KAAO,IAAS,MAC3B,IAGF,IACA,GAAW,IACX,GAAa,IAEb,UACG,IACH,AAAI,IAAS,KACX,IAGF,GAAW,IACX,GAAa,IACb,IAEA,UACG,IAEH,GAAI,IAAS,IAAK,CAChB,GAAW,IACX,GAAa,IACb,GAAS,EAET,MAgBF,GAbI,IAAU,GAEZ,CAAI,EAAO,KAAK,GACd,IAAW,IACX,GAAa,KACJ,IAAS,KAElB,IAAW,IACX,GAAa,MAMb,KAAa,KAAO,IAAa,MACjC,IAAS,KACT,IAAa,KACZ,GAAW,EAAQ,KAAO,KAAO,EAAW,EAAQ,KAAO,MAE9D,EAAM,MAAM,EAAG,KAAO,OACrB,IAAU,GAAQ,EAAO,KAAK,GAC/B,CACA,GAAa,IACb,IAEA,MAIF,GACE,IAAS,KACR,KAAa,KAAO,IAAa,MAClC,EAAW,EAAQ,KAAO,IAC1B,CACA,GAAW,KACX,GAAa,KACb,GAAS,EAET,MAGF,IAEA,UACG,IAEH,AAEI,IAAU,GAGV,IAAa,KACZ,GAAW,EAAQ,KAAO,KAAO,EAAW,EAAQ,KAAO,MAG9D,IAAW,KACX,GAAa,MAGX,KAAS,KAAO,IAAS,MAC3B,IAGF,IAEA,UACG,IAEH,GAAI,IAAS,IAAK,CAChB,GAAW,IACX,GAAa,IACb,GAAS,EAET,UACK,AACJ,KAAS,KACP,KAAa,KAAO,IAAa,KAAO,IAAa,MACvD,GAAmB,EAAQ,GAAK,IAAa,IAE9C,IAAW,IACX,GAAa,MAEb,IAAW,IACX,GAAa,KAGf,AAAI,IAAS,KACX,IAGF,IAEA,cAEA,IAIN,MAAO,CAAC,EAAS,GC7/BnB,WAAmC,CASlC,qBAAsB,EAAS,CAC9B,MAAO,GAAiB,GAWzB,QAAS,EAAM,EAAU,CAExB,MAAO,AADY,MAAK,qBAAsB,GAC5B,KAAM,GAChB,EAAQ,KAAM,GACb,EAAO,OAAQ,GAAW,OCvB9B,GAAM,GAA4B,uBAC5B,EAA4B,uBAC5B,EAA4B,+BAG5B,EAAkB,iCAGlB,EAAsB,yBCR5B,GAAM,GAAsB,yBACtB,EAAsB,iBACtB,EAAsB,eACtB,EAAsB,WAGtB,EAAkB,gBAClB,EAAkB,YCM/B,WAA8B,CAK7B,aAAc,CACb,KAAK,cAAgB,SAAS,eAAgB,GAC9C,KAAK,UAAgB,SAAS,eAAgB,GAM/C,MAAO,CACN,KAAK,aAAkB,GAAI,GAC3B,KAAK,eAAiB,KAAK,gBAAkB,GAC7C,KAAK,yBAGN,cAAe,CACd,GAAI,GAAY,GAEhB,YAAK,UAAU,iBAAkB,MAAQ,GAAe,QAAQ,AAAE,GAAiB,CAClF,GAAI,GAAc,EAAY,cAAe,IAAM,GAC/C,EAAc,EAAY,aAAe,EAAY,UAWzD,GATA,EAAW,EAAY,IAAO,CAC7B,QAAS,EACT,MAAO,KAAK,aAAa,qBAAsB,GAC/C,YAAa,KACb,QAAS,EAAY,WAAa,GAClC,QAAS,IAIL,EAAY,UAAU,SAAU,GAAoB,CACxD,GAAI,GAAc,EAAY,cAAc,MAE5C,EAAW,EAAY,IAAK,YAAc,CACzC,QAAS,EACT,QAAS,EAAY,WAAa,IAGnC,EAAY,iBAAkB,MAAO,QAAS,AAAE,GAAqB,CACpE,GAAI,GAAc,EAAgB,cAAe,KACjD,GAAK,EAAc,CAGlB,GAAI,GAAsB,EAAY,aAAe,EAAY,KAEjE,EAAW,EAAY,IAAK,QAAQ,KAAK,CACxC,QAAS,EACT,MAAO,KAAK,aAAa,qBAAsB,GAC/C,QAAS,EAAgB,WAAa,WAOpC,EAMR,wBAAyB,CACxB,KAAK,gBAAkB,SAAS,cAAe,SAyB/C,AAvByB,GAAI,SAAS,CAAE,EAAS,IAAY,CAC5D,GAAI,CAEH,KAAK,gBAAgB,UAAU,IAAK,GACpC,KAAK,gBAAgB,aAAc,OAAQ,GAC3C,KAAK,gBAAgB,aAAc,OAAQ,QAC3C,KAAK,gBAAgB,aAAc,QAAS,IAC5C,KAAK,gBAAgB,aAAc,cAAe,qBAElD,GAAM,GAAa,SAAS,cAAe,OAC3C,EAAW,aAAc,KAAM,GAC/B,EAAW,OAAQ,KAAK,iBAExB,KAAK,cAAc,QAAS,GAE5B,EAAS,UACA,EAAR,CACD,EAAQ,OAMO,KAAM,IAAM,CAC5B,KAAK,iBAOP,cAAe,CACd,KAAK,gBAAgB,iBAAkB,QAAS,AAAE,GAAO,CACxD,KAAK,WAAY,EAAE,OAAO,SAS5B,WAAY,EAAa,CACxB,GAAI,GAAa,GACjB,EAAiB,EAAW,OAE5B,GAAM,GAAgB,SAAS,iBAAiB,sBAChD,AAAK,EACJ,EAAc,QAAQ,AAAC,GAAc,CACpC,EAAU,UAAU,IAAI,0BAGzB,EAAc,QAAQ,AAAC,GAAc,CACpC,EAAU,UAAU,OAAO,0BAI7B,OAAO,OAAQ,KAAK,gBAAiB,QAAS,AAAE,GAAiB,CAChE,GAAI,GAAiB,GACf,EAAe,EAAY,YAC3B,EAAe,EAAY,MAIjC,AAAO,GACN,MAAK,UAAW,GAEX,GACJ,KAAK,UAAW,IAKlB,EAAa,KAAK,aAAa,QAAS,EAAY,GAEpD,EAAY,QAAQ,QAAS,AAAE,GAAqB,CACnD,GAAI,GAAe,EAAgB,MAMnC,AAAK,KAAK,aAAa,QAAS,EAAY,GAC3C,GAAe,GACf,KAAK,SAAU,IAMf,AAAK,EACJ,KAAK,SAAU,GAEf,KAAK,SAAU,GAMV,EAAW,QAChB,KAAK,UAAW,KAId,EAAW,QAGf,CACC,CAAE,GACF,CAAE,EAEF,KAAK,SAAU,GAEf,KAAK,SAAU,GAGX,GAKJ,CAAI,EACH,AAAK,EAAY,QAAQ,SAAS,GAGjC,KAAK,SAAU,GAFf,KAAK,SAAU,GAKhB,AAAO,EAAY,QAAQ,SAAU,GAGpC,KAAK,SAAU,GAFf,KAAK,SAAU,OAerB,SAAU,EAAW,CACpB,GAAK,CAAE,EAAS,QAAQ,SAAU,GAAkB,CACnD,GAAI,GAAoB,EAAS,QAAQ,UACzC,EAAkB,IAAK,GACvB,EAAS,QAAU,EAEpB,GAAK,EAAS,QAAQ,SAAU,GAAkB,CACjD,GAAI,GAAoB,EAAS,QAAQ,UACzC,EAAkB,OAAQ,GAC1B,EAAS,QAAU,GASrB,SAAU,EAAW,CACpB,GAAK,EAAS,QAAQ,SAAU,GAAkB,CACjD,GAAI,GAAoB,EAAS,QAAQ,UACzC,EAAkB,OAAQ,GAC1B,EAAS,QAAU,EAEpB,GAAK,CAAE,EAAS,QAAQ,SAAU,GAAkB,CACnD,GAAI,GAAoB,EAAS,QAAQ,UACzC,EAAkB,IAAK,GACvB,EAAS,QAAU,GASrB,UAAW,EAAW,CACrB,GAAK,EAAS,QAAQ,SAAU,GAAkB,CACjD,GAAI,GAAoB,EAAS,QAAQ,UACzC,EAAkB,OAAQ,GAC1B,EAAS,QAAU,EAEpB,GAAK,EAAS,QAAQ,SAAU,GAAkB,CACjD,GAAI,GAAoB,EAAS,QAAQ,UACzC,EAAkB,OAAQ,GAC1B,EAAS,QAAU,KAQtB,SAAS,iBAAiB,mBAAoB,IAAM,CAEnD,AAD6B,GAAI,KACZ",
  "names": []
}
